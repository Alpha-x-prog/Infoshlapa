{
	"info": {
		"_postman_id": "3df4bc1c-1de0-45ee-9273-05a63d86b551",
		"name": "Proect InfoShlapa",
		"description": "Collection for testing News API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45260229",
		"_collection_link": "https://kirallik.postman.co/workspace/apinews~5e300f84-7af8-45a5-be37-9a6682b92c8e/collection/45260229-3df4bc1c-1de0-45ee-9273-05a63d86b551?action=share&source=collection_link&creator=45260229"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test7@example.com\",\n    \"password\": \"test7\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test7@example.com\",\n    \"password\": \"test7\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "News",
			"item": [
				{
					"name": "Get News - Business 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=business&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "business"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Business 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Проверяем статус ответа",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Проверяем, что ответ является массивом",
									"pm.test(\"Response is an array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(Array.isArray(response)).to.be.true;",
									"});",
									"",
									"",
									"// Проверяем, что новости начинаются с 30-й позиции",
									"pm.test(\"News items start from offset 30\", function () {",
									"    const response = pm.response.json();",
									"    if (response.length > 0) {",
									"        // Получаем все новости без offset для сравнения",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/news?category=business&offset=0',",
									"            method: 'GET'",
									"        }, function (err, res) {",
									"            if (!err) {",
									"                const allNews = res.json();",
									"                // Проверяем, что первая новость в нашем ответе",
									"                // соответствует 15-й новости в полном списке",
									"                pm.expect(response[0].article_id).to.equal(allNews[15].article_id);",
									"            }",
									"        });",
									"    }",
									"});",
									"",
									"// Проверяем, что количество новостей не превышает лимит",
									"pm.test(\"Number of news items is within limit\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.length).to.be.at.most(15); // Предполагаемый лимит",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=business&offset=15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "business"
								},
								{
									"key": "offset",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Business 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Проверяем статус ответа",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Проверяем, что ответ является массивом",
									"pm.test(\"Response is an array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(Array.isArray(response)).to.be.true;",
									"});",
									"",
									"",
									"// Проверяем, что новости начинаются с 30-й позиции",
									"pm.test(\"News items start from offset 30\", function () {",
									"    const response = pm.response.json();",
									"    if (response.length > 0) {",
									"        // Получаем все новости без offset для сравнения",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/news?category=business&offset=0',",
									"            method: 'GET'",
									"        }, function (err, res) {",
									"            if (!err) {",
									"                const allNews = res.json();",
									"                // Проверяем, что первая новость в нашем ответе",
									"                // соответствует 30-й новости в полном списке",
									"                pm.expect(response[0].article_id).to.equal(allNews[30].article_id);",
									"            }",
									"        });",
									"    }",
									"});",
									"",
									"// Проверяем, что количество новостей не превышает лимит",
									"pm.test(\"Number of news items is within limit\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.length).to.be.at.most(15); // Предполагаемый лимит",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=business&offset=30",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "business"
								},
								{
									"key": "offset",
									"value": "30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Business 45",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Проверяем статус ответа",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Проверяем, что ответ является массивом",
									"pm.test(\"Response is an array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(Array.isArray(response)).to.be.true;",
									"});",
									"",
									"",
									"// Проверяем, что новости начинаются с 30-й позиции",
									"pm.test(\"News items start from offset 30\", function () {",
									"    const response = pm.response.json();",
									"    if (response.length > 0) {",
									"        // Получаем все новости без offset для сравнения",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/news?category=business&offset=0',",
									"            method: 'GET'",
									"        }, function (err, res) {",
									"            if (!err) {",
									"                const allNews = res.json();",
									"                // Проверяем, что первая новость в нашем ответе",
									"                // соответствует 45-й новости в полном списке",
									"                pm.expect(response[0].article_id).to.equal(allNews[45].article_id);",
									"            }",
									"        });",
									"    }",
									"});",
									"",
									"// Проверяем, что количество новостей не превышает лимит",
									"pm.test(\"Number of news items is within limit\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.length).to.be.at.most(15); // Предполагаемый лимит",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=business&offset=45",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "business"
								},
								{
									"key": "offset",
									"value": "45"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Sports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=sports&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "sports"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Science",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=science&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "science"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=health&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "health"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - top",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=top&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "top"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - Politics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news?category=politics&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							],
							"query": [
								{
									"key": "category",
									"value": "politics"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get News - all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"News items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('article_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('link');",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookmarks",
			"item": [
				{
					"name": "Add Bookmark example1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Bookmark added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"Bookmark added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newsId\": \"4e8234257bf2b18b74a6e142704bfb1b\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/bookmarks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"bookmarks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Bookmark example2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Bookmark added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"Bookmark added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMSwiZXhwIjoxNzQ5Mzg2ODA5fQ.EUZORjaRsoeVrDhGPeY7WS_qCP91OL-QUymjxaLaTUk"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newsId\": \"b79cffa12ebf24c53caf8bfa0e3d415b\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/bookmarks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"bookmarks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bookmarks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/protected/bookmarks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"bookmarks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bookmarks Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newsId\": \"test_article_id\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/bookmarks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"bookmarks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Channels",
			"item": [
				{
					"name": "Add Channel meduzalive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Channel added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Channel added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channel_url\": \"https://t.me/meduzalive\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Channel priem_mirea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Channel added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Channel added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA3ODB9.8cbZyZl7AcItcQ4e-OKfbBhaZ9Stkp03ZMrY05WTrAI"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channel_url\": \"https://t.me/priem_mirea\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Channel durov",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Channel added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Channel added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA3ODB9.8cbZyZl7AcItcQ4e-OKfbBhaZ9Stkp03ZMrY05WTrAI"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channel_url\": \"https://t.me/not_pixel_tanos\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Channel mireaprofkom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Channel added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Channel added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA3ODB9.8cbZyZl7AcItcQ4e-OKfbBhaZ9Stkp03ZMrY05WTrAI"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channel_url\": \"https://t.me/mireaprofkom\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Channel durov",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Channel added successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Channel added successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA3ODB9.8cbZyZl7AcItcQ4e-OKfbBhaZ9Stkp03ZMrY05WTrAI"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channel_url\": \"https://t.me/durov\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/protected/channels/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Channels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has channels array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.channels).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/protected/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Channels message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has channels array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.channels).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/protected/channels/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User 1 Channel message mireaprofkom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has channels array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.channels).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/protected/channels/mireaprofkom/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels",
								"mireaprofkom",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User 1 Channel message mireaprofkom Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has channels array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.channels).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/protected/channels/priem_mirea/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"protected",
								"channels",
								"priem_mirea",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all public channels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo3LCJleHAiOjE3NDkyODA1NjV9.wFUc7NpbrXPjXHi-98BR6u6MJOZxZTo8jGgtNhs2APA"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/public/channels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"public",
								"channels"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gemini AI",
			"item": [
				{
					"name": "Ask Gemini",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has content\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.exist;",
									"    pm.expect(jsonData.content).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"What is the latest technology trend?\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/ask",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ask"
							]
						}
					},
					"response": []
				}
			],
			"description": "StartFragment\n\n1. Endpoint: PUT /api/protected/ai/settings\n    \n\n- Требует JWT токен в заголовке Authorization\n    \n- Content-Type: application/json\n    \n\n2\\. StartFragment\n\nВозможные значения:\n\n- response_language:\n    \n- \"en\" - английский\n    \n- \"ru\" - русский\n    \n- response_length:\n    \n- \"short\" - короткие ответы\n    \n- \"medium\" - средние ответы\n    \n- \"long\" - длинные ответы\n    \n\nEndFragment"
		}
	]
}